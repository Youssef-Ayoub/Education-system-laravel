{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/services/my-data.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"../all-courses/all-courses.component\";\nexport class UserCoursesComponent {\n  constructor(myApi, router) {\n    this.myApi = myApi;\n    this.router = router;\n    this.type = \"Your Courses\";\n    if (sessionStorage.getItem('loggedIn')) {\n      const storedData = sessionStorage.getItem('userData');\n      if (storedData) {\n        const userData = JSON.parse(storedData);\n        this.userId = userData.id;\n      }\n    } else {\n      alert(\"You are not logged in. Please log in to Acess this Page.\");\n      this.router.navigate(['login']);\n    }\n  }\n  ngOnInit() {\n    console.log('user id before GITTING', this.userId);\n    this.getUserCourses();\n  }\n  getUserCourses() {\n    this.myApi.userCourses(this.userId).subscribe(response => {\n      this.coursesAPI = response;\n      console.log(this.coursesAPI);\n    }, error => {\n      console.error('errror is ', error);\n      console.log('param is ', this.userId);\n    });\n  }\n}\nUserCoursesComponent.ɵfac = function UserCoursesComponent_Factory(t) {\n  return new (t || UserCoursesComponent)(i0.ɵɵdirectiveInject(i1.MyDataService), i0.ɵɵdirectiveInject(i2.Router));\n};\nUserCoursesComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: UserCoursesComponent,\n  selectors: [[\"app-user-courses\"]],\n  decls: 1,\n  vars: 2,\n  consts: [[3, \"viewtype\", \"Courses\"]],\n  template: function UserCoursesComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelement(0, \"app-all-courses\", 0);\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"viewtype\", ctx.type)(\"Courses\", ctx.coursesAPI);\n    }\n  },\n  dependencies: [i3.AllCoursesComponent],\n  styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"names":["UserCoursesComponent","constructor","myApi","router","type","sessionStorage","getItem","storedData","userData","JSON","parse","userId","id","alert","navigate","ngOnInit","console","log","getUserCourses","userCourses","subscribe","response","coursesAPI","error","i0","ɵɵdirectiveInject","i1","MyDataService","i2","Router","selectors","decls","vars","consts","template","UserCoursesComponent_Template","rf","ctx","ɵɵelement","ɵɵproperty"],"sources":["D:\\xampp\\htdocs\\CoursePilot\\Education-system-laravel\\angular-final\\src\\app\\components\\pages\\user-courses\\user-courses.component.ts","D:\\xampp\\htdocs\\CoursePilot\\Education-system-laravel\\angular-final\\src\\app\\components\\pages\\user-courses\\user-courses.component.html"],"sourcesContent":["import { Component ,OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { MyDataService } from 'src/app/services/my-data.service';\r\n@Component({\r\n  selector: 'app-user-courses',\r\n  templateUrl: './user-courses.component.html',\r\n  styleUrls: ['./user-courses.component.scss']\r\n})\r\nexport class UserCoursesComponent implements OnInit {\r\n  userId:any;\r\n  type:string=\"Your Courses\";\r\n  coursesAPI:any;\r\n  constructor(private myApi : MyDataService , private router: Router ){\r\n    if(sessionStorage.getItem('loggedIn'))\r\n    {\r\n      const storedData = sessionStorage.getItem('userData');\r\n      if (storedData){\r\n        const userData = JSON.parse(storedData);\r\n        this.userId =userData.id;\r\n      }\r\n     }\r\n    else{\r\n      alert(\"You are not logged in. Please log in to Acess this Page.\");\r\n      this.router.navigate(['login']);\r\n    }\r\n  }\r\n\r\n\r\n  ngOnInit(): void {\r\n\r\n  console.log('user id before GITTING',  this.userId);\r\n  this.getUserCourses();\r\n  }\r\n\r\n  getUserCourses(): void {\r\n    this.myApi.userCourses(this.userId).subscribe(\r\n      (response) => {\r\n        this.coursesAPI = response;\r\n        console.log(this.coursesAPI);\r\n       },\r\n      (error) => {\r\n        console.error('errror is ' , error)\r\n        console.log('param is ' , this.userId);\r\n      }\r\n    );\r\n\r\n  }\r\n\r\n\r\n}\r\n","<app-all-courses [viewtype]=\"type\" [Courses]=\"coursesAPI\"></app-all-courses>\r\n\r\n"],"mappings":";;;;AAQA,OAAM,MAAOA,oBAAoB;EAI/BC,YAAoBC,KAAqB,EAAWC,MAAc;IAA9C,KAAAD,KAAK,GAALA,KAAK;IAA2B,KAAAC,MAAM,GAANA,MAAM;IAF1D,KAAAC,IAAI,GAAQ,cAAc;IAGxB,IAAGC,cAAc,CAACC,OAAO,CAAC,UAAU,CAAC,EACrC;MACE,MAAMC,UAAU,GAAGF,cAAc,CAACC,OAAO,CAAC,UAAU,CAAC;MACrD,IAAIC,UAAU,EAAC;QACb,MAAMC,QAAQ,GAAGC,IAAI,CAACC,KAAK,CAACH,UAAU,CAAC;QACvC,IAAI,CAACI,MAAM,GAAEH,QAAQ,CAACI,EAAE;;KAE1B,MACE;MACFC,KAAK,CAAC,0DAA0D,CAAC;MACjE,IAAI,CAACV,MAAM,CAACW,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC;;EAEnC;EAGAC,QAAQA,CAAA;IAERC,OAAO,CAACC,GAAG,CAAC,wBAAwB,EAAG,IAAI,CAACN,MAAM,CAAC;IACnD,IAAI,CAACO,cAAc,EAAE;EACrB;EAEAA,cAAcA,CAAA;IACZ,IAAI,CAAChB,KAAK,CAACiB,WAAW,CAAC,IAAI,CAACR,MAAM,CAAC,CAACS,SAAS,CAC1CC,QAAQ,IAAI;MACX,IAAI,CAACC,UAAU,GAAGD,QAAQ;MAC1BL,OAAO,CAACC,GAAG,CAAC,IAAI,CAACK,UAAU,CAAC;IAC7B,CAAC,EACDC,KAAK,IAAI;MACRP,OAAO,CAACO,KAAK,CAAC,YAAY,EAAGA,KAAK,CAAC;MACnCP,OAAO,CAACC,GAAG,CAAC,WAAW,EAAG,IAAI,CAACN,MAAM,CAAC;IACxC,CAAC,CACF;EAEH;;AAtCWX,oBAAoB,C;mBAApBA,oBAAoB,EAAAwB,EAAA,CAAAC,iBAAA,CAAAC,EAAA,CAAAC,aAAA,GAAAH,EAAA,CAAAC,iBAAA,CAAAG,EAAA,CAAAC,MAAA;AAAA;AAApB7B,oBAAoB,C;QAApBA,oBAAoB;EAAA8B,SAAA;EAAAC,KAAA;EAAAC,IAAA;EAAAC,MAAA;EAAAC,QAAA,WAAAC,8BAAAC,EAAA,EAAAC,GAAA;IAAA,IAAAD,EAAA;MCRjCZ,EAAA,CAAAc,SAAA,yBAA4E;;;MAA3Dd,EAAA,CAAAe,UAAA,aAAAF,GAAA,CAAAjC,IAAA,CAAiB,YAAAiC,GAAA,CAAAf,UAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}