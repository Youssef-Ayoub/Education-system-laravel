{"ast":null,"code":"import * as i0 from '@angular/core';\nimport { Injectable, NgZone, EventEmitter, Component, ChangeDetectionStrategy, ElementRef, Renderer2, Input, Output, NgModule } from '@angular/core';\nimport { ReplaySubject } from 'rxjs';\nfunction win() {\n  return window;\n}\nfunction YouTubeRef() {\n  return win()[\"YT\"];\n}\nfunction YouTubePlayerRef() {\n  return YouTubeRef().Player;\n}\nconst defaultSizes = {\n  height: 270,\n  width: 367\n};\nclass YoutubePlayerService {\n  constructor(zone) {\n    this.zone = zone;\n    this.api = new ReplaySubject(1);\n    this.createApi();\n  }\n  loadPlayerApi(options) {\n    const doc = win().document;\n    if (!YoutubePlayerService[\"ytApiLoaded\"]) {\n      YoutubePlayerService.ytApiLoaded = true;\n      const playerApiScript = doc.createElement(\"script\");\n      playerApiScript.type = \"text/javascript\";\n      playerApiScript.src = `${options.protocol}://www.youtube.com/iframe_api`;\n      doc.body.appendChild(playerApiScript);\n    }\n  }\n  setupPlayer(elementId, outputs, sizes, videoId = \"\", playerVars) {\n    const createPlayer = () => {\n      if (YouTubePlayerRef) {\n        this.createPlayer(elementId, outputs, sizes, videoId, playerVars);\n      }\n    };\n    this.api.subscribe(createPlayer);\n  }\n  play(player) {\n    player.playVideo();\n  }\n  pause(player) {\n    player.pauseVideo();\n  }\n  playVideo(media, player) {\n    const id = media.id.videoId ? media.id.videoId : media.id;\n    player.loadVideoById(id);\n    this.play(player);\n  }\n  isPlaying(player) {\n    // because YT is not loaded yet 1 is used - YT.PlayerState.PLAYING\n    const isPlayerReady = player && player.getPlayerState;\n    const playerState = isPlayerReady ? player.getPlayerState() : {};\n    const isPlayerPlaying = isPlayerReady ? playerState !== YouTubeRef().PlayerState.ENDED && playerState !== YouTubeRef().PlayerState.PAUSED : false;\n    return isPlayerPlaying;\n  }\n  createPlayer(elementId, outputs, sizes, videoId = \"\", playerVars = {}) {\n    const playerSize = {\n      height: sizes.height || defaultSizes.height,\n      width: sizes.width || defaultSizes.width\n    };\n    const ytPlayer = YouTubePlayerRef();\n    return new ytPlayer(elementId, Object.assign(Object.assign({}, playerSize), {\n      events: {\n        onReady: ev => {\n          this.zone.run(() => outputs.ready && outputs.ready.next(ev.target));\n        },\n        onStateChange: ev => {\n          this.zone.run(() => outputs.change && outputs.change.next(ev));\n        }\n      },\n      playerVars,\n      videoId\n    }));\n  }\n  toggleFullScreen(player, isFullScreen) {\n    let {\n      height,\n      width\n    } = defaultSizes;\n    if (!isFullScreen) {\n      height = window.innerHeight;\n      width = window.innerWidth;\n    }\n    player.setSize(width, height);\n  }\n  // adpoted from uid\n  generateUniqueId() {\n    const len = 7;\n    return Math.random().toString(35).substr(2, len);\n  }\n  createApi() {\n    const onYouTubeIframeAPIReady = () => {\n      if (win()) {\n        win()[\"onYouTubeIframeAPIReadyCalled\"] = true;\n        this.api.next();\n      }\n    };\n    win()[\"onYouTubeIframeAPIReady\"] = onYouTubeIframeAPIReady;\n    /**\r\n     * If onYouTubeIframeAPIReady is called in other place, then just trigger next\r\n     * This is to prevent player not initializing issue when another player got initialized in other place\r\n     */\n    if (win()[\"onYouTubeIframeAPIReadyCalled\"]) {\n      this.api.next();\n    }\n  }\n}\nYoutubePlayerService.ytApiLoaded = false;\nYoutubePlayerService.ɵprov = i0.ɵɵdefineInjectable({\n  factory: function YoutubePlayerService_Factory() {\n    return new YoutubePlayerService(i0.ɵɵinject(i0.NgZone));\n  },\n  token: YoutubePlayerService,\n  providedIn: \"root\"\n});\nYoutubePlayerService.decorators = [{\n  type: Injectable,\n  args: [{\n    providedIn: \"root\"\n  }]\n}];\nYoutubePlayerService.ctorParameters = () => [{\n  type: NgZone\n}];\nclass YoutubePlayerComponent {\n  constructor(playerService, elementRef, renderer) {\n    this.playerService = playerService;\n    this.elementRef = elementRef;\n    this.renderer = renderer;\n    this.videoId = '';\n    this.height = defaultSizes.height;\n    this.width = defaultSizes.width;\n    /**\r\n     * @description sets the protocol by the navigator object\r\n     * if there is no window, it sets a default http protocol\r\n     * unless the protocol is set from outside\r\n     */\n    this.protocol = this.getProtocol();\n    this.playerVars = {};\n    // player created and initialized - sends instance of the player\n    this.ready = new EventEmitter();\n    // state change: send the YT event with its state\n    this.change = new EventEmitter();\n  }\n  ngAfterContentInit() {\n    const htmlId = this.playerService.generateUniqueId();\n    const playerSize = {\n      height: this.height,\n      width: this.width\n    };\n    const container = this.renderer.selectRootElement('#yt-player-ngx-component');\n    this.renderer.setAttribute(container, 'id', htmlId);\n    this.playerService.loadPlayerApi({\n      protocol: this.protocol\n    });\n    this.playerService.setupPlayer(htmlId, {\n      change: this.change,\n      ready: this.ready\n    }, playerSize, this.videoId, this.playerVars);\n  }\n  getProtocol() {\n    const hasWindow = window && window.location;\n    const protocol = hasWindow ? window.location.protocol.replace(':', '') : 'http';\n    return protocol;\n  }\n}\nYoutubePlayerComponent.decorators = [{\n  type: Component,\n  args: [{\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    selector: 'youtube-player',\n    template: `\n    <div id=\"yt-player-ngx-component\"></div>\n  `\n  }]\n}];\nYoutubePlayerComponent.ctorParameters = () => [{\n  type: YoutubePlayerService\n}, {\n  type: ElementRef\n}, {\n  type: Renderer2\n}];\nYoutubePlayerComponent.propDecorators = {\n  videoId: [{\n    type: Input\n  }],\n  height: [{\n    type: Input\n  }],\n  width: [{\n    type: Input\n  }],\n  protocol: [{\n    type: Input\n  }],\n  playerVars: [{\n    type: Input\n  }],\n  ready: [{\n    type: Output\n  }],\n  change: [{\n    type: Output\n  }]\n};\nclass NgxYoutubePlayerModule {\n  static forRoot() {\n    return {\n      ngModule: NgxYoutubePlayerModule,\n      providers: [YoutubePlayerService]\n    };\n  }\n}\nNgxYoutubePlayerModule.decorators = [{\n  type: NgModule,\n  args: [{\n    declarations: [YoutubePlayerComponent],\n    imports: [],\n    providers: [YoutubePlayerService],\n    exports: [YoutubePlayerComponent]\n  }]\n}];\n\n/*\r\n * Public API Surface of ngx-youtube-player\r\n */\n\n/**\r\n * Generated bundle index. Do not edit.\r\n */\n\nexport { NgxYoutubePlayerModule, YouTubePlayerRef, YouTubeRef, YoutubePlayerComponent, YoutubePlayerService, defaultSizes, win };","map":{"version":3,"names":["i0","Injectable","NgZone","EventEmitter","Component","ChangeDetectionStrategy","ElementRef","Renderer2","Input","Output","NgModule","ReplaySubject","win","window","YouTubeRef","YouTubePlayerRef","Player","defaultSizes","height","width","YoutubePlayerService","constructor","zone","api","createApi","loadPlayerApi","options","doc","document","ytApiLoaded","playerApiScript","createElement","type","src","protocol","body","appendChild","setupPlayer","elementId","outputs","sizes","videoId","playerVars","createPlayer","subscribe","play","player","playVideo","pause","pauseVideo","media","id","loadVideoById","isPlaying","isPlayerReady","getPlayerState","playerState","isPlayerPlaying","PlayerState","ENDED","PAUSED","playerSize","ytPlayer","Object","assign","events","onReady","ev","run","ready","next","target","onStateChange","change","toggleFullScreen","isFullScreen","innerHeight","innerWidth","setSize","generateUniqueId","len","Math","random","toString","substr","onYouTubeIframeAPIReady","ɵprov","ɵɵdefineInjectable","factory","YoutubePlayerService_Factory","ɵɵinject","token","providedIn","decorators","args","ctorParameters","YoutubePlayerComponent","playerService","elementRef","renderer","getProtocol","ngAfterContentInit","htmlId","container","selectRootElement","setAttribute","hasWindow","location","replace","changeDetection","OnPush","selector","template","propDecorators","NgxYoutubePlayerModule","forRoot","ngModule","providers","declarations","imports","exports"],"sources":["D:/xampp/htdocs/CoursePilot/Education-system-laravel/node_modules/ngx-youtube-player/fesm2015/ngx-youtube-player.js"],"sourcesContent":["import * as i0 from '@angular/core';\r\nimport { Injectable, NgZone, EventEmitter, Component, ChangeDetectionStrategy, ElementRef, Renderer2, Input, Output, NgModule } from '@angular/core';\r\nimport { ReplaySubject } from 'rxjs';\r\n\r\nfunction win() {\r\n    return window;\r\n}\r\nfunction YouTubeRef() {\r\n    return win()[\"YT\"];\r\n}\r\nfunction YouTubePlayerRef() {\r\n    return YouTubeRef().Player;\r\n}\r\nconst defaultSizes = {\r\n    height: 270,\r\n    width: 367,\r\n};\r\nclass YoutubePlayerService {\r\n    constructor(zone) {\r\n        this.zone = zone;\r\n        this.api = new ReplaySubject(1);\r\n        this.createApi();\r\n    }\r\n    loadPlayerApi(options) {\r\n        const doc = win().document;\r\n        if (!YoutubePlayerService[\"ytApiLoaded\"]) {\r\n            YoutubePlayerService.ytApiLoaded = true;\r\n            const playerApiScript = doc.createElement(\"script\");\r\n            playerApiScript.type = \"text/javascript\";\r\n            playerApiScript.src = `${options.protocol}://www.youtube.com/iframe_api`;\r\n            doc.body.appendChild(playerApiScript);\r\n        }\r\n    }\r\n    setupPlayer(elementId, outputs, sizes, videoId = \"\", playerVars) {\r\n        const createPlayer = () => {\r\n            if (YouTubePlayerRef) {\r\n                this.createPlayer(elementId, outputs, sizes, videoId, playerVars);\r\n            }\r\n        };\r\n        this.api.subscribe(createPlayer);\r\n    }\r\n    play(player) {\r\n        player.playVideo();\r\n    }\r\n    pause(player) {\r\n        player.pauseVideo();\r\n    }\r\n    playVideo(media, player) {\r\n        const id = media.id.videoId ? media.id.videoId : media.id;\r\n        player.loadVideoById(id);\r\n        this.play(player);\r\n    }\r\n    isPlaying(player) {\r\n        // because YT is not loaded yet 1 is used - YT.PlayerState.PLAYING\r\n        const isPlayerReady = player && player.getPlayerState;\r\n        const playerState = isPlayerReady ? player.getPlayerState() : {};\r\n        const isPlayerPlaying = isPlayerReady\r\n            ? playerState !== YouTubeRef().PlayerState.ENDED &&\r\n                playerState !== YouTubeRef().PlayerState.PAUSED\r\n            : false;\r\n        return isPlayerPlaying;\r\n    }\r\n    createPlayer(elementId, outputs, sizes, videoId = \"\", playerVars = {}) {\r\n        const playerSize = {\r\n            height: sizes.height || defaultSizes.height,\r\n            width: sizes.width || defaultSizes.width,\r\n        };\r\n        const ytPlayer = YouTubePlayerRef();\r\n        return new ytPlayer(elementId, Object.assign(Object.assign({}, playerSize), { events: {\r\n                onReady: (ev) => {\r\n                    this.zone.run(() => outputs.ready && outputs.ready.next(ev.target));\r\n                },\r\n                onStateChange: (ev) => {\r\n                    this.zone.run(() => outputs.change && outputs.change.next(ev));\r\n                },\r\n            }, playerVars,\r\n            videoId }));\r\n    }\r\n    toggleFullScreen(player, isFullScreen) {\r\n        let { height, width } = defaultSizes;\r\n        if (!isFullScreen) {\r\n            height = window.innerHeight;\r\n            width = window.innerWidth;\r\n        }\r\n        player.setSize(width, height);\r\n    }\r\n    // adpoted from uid\r\n    generateUniqueId() {\r\n        const len = 7;\r\n        return Math.random().toString(35).substr(2, len);\r\n    }\r\n    createApi() {\r\n        const onYouTubeIframeAPIReady = () => {\r\n            if (win()) {\r\n                win()[\"onYouTubeIframeAPIReadyCalled\"] = true;\r\n                this.api.next();\r\n            }\r\n        };\r\n        win()[\"onYouTubeIframeAPIReady\"] = onYouTubeIframeAPIReady;\r\n        /**\r\n         * If onYouTubeIframeAPIReady is called in other place, then just trigger next\r\n         * This is to prevent player not initializing issue when another player got initialized in other place\r\n         */\r\n        if (win()[\"onYouTubeIframeAPIReadyCalled\"]) {\r\n            this.api.next();\r\n        }\r\n    }\r\n}\r\nYoutubePlayerService.ytApiLoaded = false;\r\nYoutubePlayerService.ɵprov = i0.ɵɵdefineInjectable({ factory: function YoutubePlayerService_Factory() { return new YoutubePlayerService(i0.ɵɵinject(i0.NgZone)); }, token: YoutubePlayerService, providedIn: \"root\" });\r\nYoutubePlayerService.decorators = [\r\n    { type: Injectable, args: [{\r\n                providedIn: \"root\",\r\n            },] }\r\n];\r\nYoutubePlayerService.ctorParameters = () => [\r\n    { type: NgZone }\r\n];\r\n\r\nclass YoutubePlayerComponent {\r\n    constructor(playerService, elementRef, renderer) {\r\n        this.playerService = playerService;\r\n        this.elementRef = elementRef;\r\n        this.renderer = renderer;\r\n        this.videoId = '';\r\n        this.height = defaultSizes.height;\r\n        this.width = defaultSizes.width;\r\n        /**\r\n         * @description sets the protocol by the navigator object\r\n         * if there is no window, it sets a default http protocol\r\n         * unless the protocol is set from outside\r\n         */\r\n        this.protocol = this.getProtocol();\r\n        this.playerVars = {};\r\n        // player created and initialized - sends instance of the player\r\n        this.ready = new EventEmitter();\r\n        // state change: send the YT event with its state\r\n        this.change = new EventEmitter();\r\n    }\r\n    ngAfterContentInit() {\r\n        const htmlId = this.playerService.generateUniqueId();\r\n        const playerSize = { height: this.height, width: this.width };\r\n        const container = this.renderer.selectRootElement('#yt-player-ngx-component');\r\n        this.renderer.setAttribute(container, 'id', htmlId);\r\n        this.playerService.loadPlayerApi({\r\n            protocol: this.protocol\r\n        });\r\n        this.playerService.setupPlayer(htmlId, {\r\n            change: this.change,\r\n            ready: this.ready\r\n        }, playerSize, this.videoId, this.playerVars);\r\n    }\r\n    getProtocol() {\r\n        const hasWindow = window && window.location;\r\n        const protocol = hasWindow\r\n            ? window.location.protocol.replace(':', '')\r\n            : 'http';\r\n        return protocol;\r\n    }\r\n}\r\nYoutubePlayerComponent.decorators = [\r\n    { type: Component, args: [{\r\n                changeDetection: ChangeDetectionStrategy.OnPush,\r\n                selector: 'youtube-player',\r\n                template: `\r\n    <div id=\"yt-player-ngx-component\"></div>\r\n  `\r\n            },] }\r\n];\r\nYoutubePlayerComponent.ctorParameters = () => [\r\n    { type: YoutubePlayerService },\r\n    { type: ElementRef },\r\n    { type: Renderer2 }\r\n];\r\nYoutubePlayerComponent.propDecorators = {\r\n    videoId: [{ type: Input }],\r\n    height: [{ type: Input }],\r\n    width: [{ type: Input }],\r\n    protocol: [{ type: Input }],\r\n    playerVars: [{ type: Input }],\r\n    ready: [{ type: Output }],\r\n    change: [{ type: Output }]\r\n};\r\n\r\nclass NgxYoutubePlayerModule {\r\n    static forRoot() {\r\n        return {\r\n            ngModule: NgxYoutubePlayerModule,\r\n            providers: [YoutubePlayerService]\r\n        };\r\n    }\r\n}\r\nNgxYoutubePlayerModule.decorators = [\r\n    { type: NgModule, args: [{\r\n                declarations: [YoutubePlayerComponent],\r\n                imports: [],\r\n                providers: [YoutubePlayerService],\r\n                exports: [YoutubePlayerComponent]\r\n            },] }\r\n];\r\n\r\n/*\r\n * Public API Surface of ngx-youtube-player\r\n */\r\n\r\n/**\r\n * Generated bundle index. Do not edit.\r\n */\r\n\r\nexport { NgxYoutubePlayerModule, YouTubePlayerRef, YouTubeRef, YoutubePlayerComponent, YoutubePlayerService, defaultSizes, win };\r\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}