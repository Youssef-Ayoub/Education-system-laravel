{"ast":null,"code":"import { FormGroup, Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"../../../services/my-data.service\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"../../../services/logged-in-user-data.service\";\nimport * as i5 from \"@angular/common\";\nfunction RegisterComponent_span_16_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 34);\n    i0.ɵɵtext(1, \" First Name is required \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction RegisterComponent_span_20_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 34);\n    i0.ɵɵtext(1, \" Last Name is required \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction RegisterComponent_span_24_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 34);\n    i0.ɵɵtext(1, \" Please enter a valid email address \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction RegisterComponent_span_28_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 34);\n    i0.ɵɵtext(1, \" Password must be at least 8 characters long \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction RegisterComponent_span_33_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 34);\n    i0.ɵɵtext(1, \" Passwords do not match \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction RegisterComponent_span_59_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 34);\n    i0.ɵɵtext(1, \" Account Type is required \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction RegisterComponent_span_60_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 34);\n    i0.ɵɵtext(1, \" Gender is required \");\n    i0.ɵɵelementEnd();\n  }\n}\nconst _c0 = function (a0) {\n  return {\n    \"has-error\": a0\n  };\n};\nexport class RegisterComponent {\n  constructor(formBuilder, MyDataService, router, userData) {\n    this.formBuilder = formBuilder;\n    this.MyDataService = MyDataService;\n    this.router = router;\n    this.userData = userData;\n    this.passwordVisible = false;\n    this.passwordVisible2 = false;\n  }\n  ngOnInit() {\n    this.registerForm = this.formBuilder.group({\n      firstName: ['', Validators.required],\n      lastName: ['', Validators.required],\n      email: ['', [Validators.required, Validators.email]],\n      password: ['', [Validators.required, Validators.minLength(8)]],\n      confirmPassword: ['', Validators.required],\n      type: ['', Validators.required],\n      gender: ['', Validators.required]\n    }, {\n      validator: passwordMatchValidator\n    });\n  }\n  submitForm(formData) {\n    formData.name = this.getFullName();\n    if (this.registerForm.invalid) {\n      this.markFormGroupTouched(this.registerForm);\n      return;\n    } else {\n      delete formData.firstName;\n      delete formData.lastName;\n      delete formData.confirmPassword;\n      // console.log( \"data before sending Request \" , formData);\n      //sending Registeration Request to the server.\n      this.MyDataService.Registeruser(formData).subscribe(response => {\n        console.log('Response status:', response[1]);\n        this.userData.setUserData(response[0]);\n        console.log('Response:', response[0]);\n        if (response[0].type == 0) {\n          console.log(\"Student Logged In\");\n          this.router.navigate(['']);\n          const token = \"8|25HoPY3ItEA611U3saxIzK1RwV4lo9zhyjeB9HF8\"; //stdent\n          sessionStorage.setItem('token', token);\n          console.log(token);\n        } else {\n          console.log(\"Instructor Logged In\");\n          this.router.navigate(['userProfile']);\n          const token = \"7|a2cj7O2web2L37do5nlKAS40wy72hPJk6kWxNtrW\";\n          sessionStorage.setItem('token', token);\n          console.log(token);\n        }\n        this.userData.setUserData(response[0]);\n      }, error => {\n        console.error('Error:', error);\n        if (error.status === 422) {\n          const errorMessage = error.error.message;\n          console.log('Error Message:', errorMessage);\n          alert(errorMessage);\n        }\n      });\n    }\n  }\n  // Helper method to mark all form controls as touched\n  markFormGroupTouched(formGroup) {\n    Object.values(formGroup.controls).forEach(control => {\n      if (control instanceof FormGroup) {\n        this.markFormGroupTouched(control);\n      } else {\n        control.markAsTouched();\n      }\n    });\n  }\n  togglePasswordVisibility() {\n    this.passwordVisible = !this.passwordVisible;\n  }\n  togglePasswordVisibility2() {\n    this.passwordVisible2 = !this.passwordVisible2;\n  }\n  getFullName() {\n    const firstName = this.registerForm.get('firstName')?.value;\n    const lastName = this.registerForm.get('lastName')?.value;\n    return `${firstName} ${lastName}`;\n  }\n}\nRegisterComponent.ɵfac = function RegisterComponent_Factory(t) {\n  return new (t || RegisterComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.MyDataService), i0.ɵɵdirectiveInject(i3.Router), i0.ɵɵdirectiveInject(i4.LoggedInUserDataService));\n};\nRegisterComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: RegisterComponent,\n  selectors: [[\"app-register\"]],\n  decls: 61,\n  vars: 31,\n  consts: [[1, \"register\"], [1, \"container\"], [1, \"description\"], [1, \"desc_text\"], [1, \"main-img\", \"w-50\"], [\"src\", \"../../../assets/images/login.png\", \"alt\", \"image-1\", 1, \"main_content_image\"], [1, \"main_form\"], [3, \"formGroup\", \"ngSubmit\"], [1, \"main_form_headnig\"], [1, \"username\"], [1, \"input_field\", 3, \"ngClass\"], [1, \"fa-regular\", \"fa-user\", \"fa-bounce\"], [\"type\", \"text\", \"formControlName\", \"firstName\", \"placeholder\", \"First Name\"], [\"class\", \"error-message\", 4, \"ngIf\"], [\"type\", \"text\", \"formControlName\", \"lastName\", \"placeholder\", \"Last Name\"], [1, \"fa-regular\", \"fa-envelope\", \"fa-bounce\"], [\"type\", \"email\", \"formControlName\", \"email\", \"placeholder\", \"Email\"], [1, \"fa-solid\", \"fa-lock\", \"fa-bounce\"], [\"formControlName\", \"password\", \"placeholder\", \"Password\", 3, \"type\"], [1, \"fa-solid\", \"fa-eye\", \"password-toggle\", \"eye\", 3, \"click\"], [\"type\", \"password\", \"formControlName\", \"confirmPassword\", \"placeholder\", \"Confirm Password\", 3, \"type\"], [1, \"submittion\"], [1, \"select_dropdown_menu\", 3, \"ngClass\"], [1, \"fa-regular\", \"fa-user\", \"fa-bounce\", \"user\"], [\"formControlName\", \"type\"], [\"value\", \"\", \"disabled\", \"\", \"selected\", \"\"], [\"value\", \"0\"], [\"value\", \"1\"], [1, \"fa-solid\", \"fa-angle-down\", \"down_arrow\"], [\"formControlName\", \"gender\"], [\"value\", \"male\"], [\"value\", \"female\"], [\"type\", \"submit\", 1, \"next_btn\"], [1, \"d-flex\", \"justify-content-between\", \"px-1\", 2, \"width\", \"72%\"], [1, \"error-message\"]],\n  template: function RegisterComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"header\")(1, \"section\", 0)(2, \"section\", 1)(3, \"section\", 2)(4, \"p\", 3);\n      i0.ɵɵtext(5, \"create New Account\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(6, \"section\", 4);\n      i0.ɵɵelement(7, \"img\", 5);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(8, \"section\", 6)(9, \"form\", 7);\n      i0.ɵɵlistener(\"ngSubmit\", function RegisterComponent_Template_form_ngSubmit_9_listener() {\n        return ctx.submitForm(ctx.registerForm.value);\n      });\n      i0.ɵɵelementStart(10, \"h3\", 8);\n      i0.ɵɵtext(11, \"sign up\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(12, \"section\", 9)(13, \"section\", 10);\n      i0.ɵɵelement(14, \"i\", 11)(15, \"input\", 12);\n      i0.ɵɵtemplate(16, RegisterComponent_span_16_Template, 2, 0, \"span\", 13);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(17, \"section\", 10);\n      i0.ɵɵelement(18, \"i\", 11)(19, \"input\", 14);\n      i0.ɵɵtemplate(20, RegisterComponent_span_20_Template, 2, 0, \"span\", 13);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(21, \"section\", 10);\n      i0.ɵɵelement(22, \"i\", 15)(23, \"input\", 16);\n      i0.ɵɵtemplate(24, RegisterComponent_span_24_Template, 2, 0, \"span\", 13);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(25, \"section\", 10);\n      i0.ɵɵelement(26, \"i\", 17)(27, \"input\", 18);\n      i0.ɵɵtemplate(28, RegisterComponent_span_28_Template, 2, 0, \"span\", 13);\n      i0.ɵɵelementStart(29, \"i\", 19);\n      i0.ɵɵlistener(\"click\", function RegisterComponent_Template_i_click_29_listener() {\n        return ctx.togglePasswordVisibility();\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(30, \"section\", 10);\n      i0.ɵɵelement(31, \"i\", 17)(32, \"input\", 20);\n      i0.ɵɵtemplate(33, RegisterComponent_span_33_Template, 2, 0, \"span\", 13);\n      i0.ɵɵelementStart(34, \"i\", 19);\n      i0.ɵɵlistener(\"click\", function RegisterComponent_Template_i_click_34_listener() {\n        return ctx.togglePasswordVisibility2();\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(35, \"section\", 21)(36, \"section\", 22);\n      i0.ɵɵelement(37, \"i\", 23);\n      i0.ɵɵelementStart(38, \"select\", 24)(39, \"option\", 25);\n      i0.ɵɵtext(40, \"AccType\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(41, \"option\", 26);\n      i0.ɵɵtext(42, \"Student\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(43, \"option\", 27);\n      i0.ɵɵtext(44, \"Instructor\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelement(45, \"i\", 28);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(46, \"section\", 22);\n      i0.ɵɵelement(47, \"i\", 23);\n      i0.ɵɵelementStart(48, \"select\", 29)(49, \"option\", 25);\n      i0.ɵɵtext(50, \"Gender\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(51, \"option\", 30);\n      i0.ɵɵtext(52, \"Male\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(53, \"option\", 31);\n      i0.ɵɵtext(54, \"Female\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelement(55, \"i\", 28);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(56, \"button\", 32);\n      i0.ɵɵtext(57, \"Next\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(58, \"section\", 33);\n      i0.ɵɵtemplate(59, RegisterComponent_span_59_Template, 2, 0, \"span\", 13);\n      i0.ɵɵtemplate(60, RegisterComponent_span_60_Template, 2, 0, \"span\", 13);\n      i0.ɵɵelementEnd()()()()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(9);\n      i0.ɵɵproperty(\"formGroup\", ctx.registerForm);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(17, _c0, ctx.registerForm.controls[\"firstName\"].invalid && ctx.registerForm.controls[\"firstName\"].touched));\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngIf\", ctx.registerForm.controls[\"firstName\"].invalid && ctx.registerForm.controls[\"firstName\"].touched);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(19, _c0, ctx.registerForm.controls[\"lastName\"].invalid && ctx.registerForm.controls[\"lastName\"].touched));\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngIf\", ctx.registerForm.controls[\"lastName\"].invalid && ctx.registerForm.controls[\"lastName\"].touched);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(21, _c0, ctx.registerForm.controls[\"email\"].invalid && ctx.registerForm.controls[\"email\"].touched));\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngIf\", ctx.registerForm.controls[\"email\"].invalid && ctx.registerForm.controls[\"email\"].touched);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(23, _c0, ctx.registerForm.controls[\"password\"].invalid && ctx.registerForm.controls[\"password\"].touched));\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"type\", ctx.passwordVisible ? \"text\" : \"password\");\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.registerForm.controls[\"password\"].invalid && ctx.registerForm.controls[\"password\"].touched);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(25, _c0, ctx.registerForm.controls[\"confirmPassword\"].invalid && ctx.registerForm.controls[\"confirmPassword\"].touched));\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"type\", ctx.passwordVisible2 ? \"text\" : \"password\");\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.registerForm.hasError(\"passwordMismatch\") && ctx.registerForm.controls[\"confirmPassword\"].touched);\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(27, _c0, ctx.registerForm.controls[\"type\"].invalid && ctx.registerForm.controls[\"type\"].touched));\n      i0.ɵɵadvance(10);\n      i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(29, _c0, ctx.registerForm.controls[\"gender\"].invalid && ctx.registerForm.controls[\"gender\"].touched));\n      i0.ɵɵadvance(13);\n      i0.ɵɵproperty(\"ngIf\", ctx.registerForm.controls[\"type\"].invalid && ctx.registerForm.controls[\"type\"].touched);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.registerForm.controls[\"gender\"].invalid && ctx.registerForm.controls[\"gender\"].touched);\n    }\n  },\n  dependencies: [i5.NgClass, i5.NgIf, i1.ɵNgNoValidate, i1.NgSelectOption, i1.ɵNgSelectMultipleOption, i1.DefaultValueAccessor, i1.SelectControlValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName],\n  encapsulation: 2\n});\nfunction passwordMatchValidator(control) {\n  const password = control.get('password');\n  const confirmPassword = control.get('confirmPassword');\n  if (password && confirmPassword && password.value !== confirmPassword.value) {\n    return {\n      'passwordMismatch': true\n    };\n  }\n  return null;\n}","map":{"version":3,"names":["FormGroup","Validators","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","RegisterComponent","constructor","formBuilder","MyDataService","router","userData","passwordVisible","passwordVisible2","ngOnInit","registerForm","group","firstName","required","lastName","email","password","minLength","confirmPassword","type","gender","validator","passwordMatchValidator","submitForm","formData","name","getFullName","invalid","markFormGroupTouched","Registeruser","subscribe","response","console","log","setUserData","navigate","token","sessionStorage","setItem","error","status","errorMessage","message","alert","formGroup","Object","values","controls","forEach","control","markAsTouched","togglePasswordVisibility","togglePasswordVisibility2","get","value","ɵɵdirectiveInject","i1","FormBuilder","i2","i3","Router","i4","LoggedInUserDataService","selectors","decls","vars","consts","template","RegisterComponent_Template","rf","ctx","ɵɵelement","ɵɵlistener","RegisterComponent_Template_form_ngSubmit_9_listener","ɵɵtemplate","RegisterComponent_span_16_Template","RegisterComponent_span_20_Template","RegisterComponent_span_24_Template","RegisterComponent_span_28_Template","RegisterComponent_Template_i_click_29_listener","RegisterComponent_span_33_Template","RegisterComponent_Template_i_click_34_listener","RegisterComponent_span_59_Template","RegisterComponent_span_60_Template","ɵɵadvance","ɵɵproperty","ɵɵpureFunction1","_c0","touched","hasError"],"sources":["D:\\xampp\\htdocs\\CoursePilot\\Education-system-laravel\\angular-final\\src\\app\\components\\pages\\register\\register.component.ts","D:\\xampp\\htdocs\\CoursePilot\\Education-system-laravel\\angular-final\\src\\app\\components\\pages\\register\\register.component.html"],"sourcesContent":["import { Component ,OnInit } from '@angular/core';\r\nimport { AbstractControl, FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { MyDataService } from '../../../services/my-data.service';\r\nimport {LoggedInUserDataService} from '../../../services/logged-in-user-data.service'\r\nimport { Router } from '@angular/router';\r\n\r\n\r\n\r\n\r\n\r\n@Component({\r\n  selector: 'app-register',\r\n  templateUrl: './register.component.html',\r\n })\r\n\r\nexport class RegisterComponent implements OnInit {\r\n\r\n  registerForm!: FormGroup;\r\n  passwordVisible: boolean = false;\r\n  passwordVisible2: boolean = false;\r\n\r\n\r\n  constructor(private formBuilder: FormBuilder , private MyDataService:MyDataService , private router: Router , private userData:LoggedInUserDataService) { }\r\n\r\n  ngOnInit() {\r\n    this.registerForm = this.formBuilder.group({\r\n      firstName: ['', Validators.required],\r\n      lastName: ['', Validators.required],\r\n      email: ['', [Validators.required, Validators.email]],\r\n      password: ['', [Validators.required, Validators.minLength(8)]],\r\n      confirmPassword: ['', Validators.required , ],\r\n      type: ['', Validators.required],\r\n      gender: ['', Validators.required]\r\n    },\r\n    {\r\n      validator: passwordMatchValidator\r\n    });\r\n  }\r\n\r\n  submitForm(formData:any) {\r\n    formData.name = this.getFullName();\r\n\r\n    if (this.registerForm.invalid) {\r\n       this.markFormGroupTouched(this.registerForm);\r\n      return;\r\n    }\r\n\r\n    else{\r\n      delete formData.firstName;\r\n      delete formData.lastName;\r\n      delete formData.confirmPassword;\r\n      // console.log( \"data before sending Request \" , formData);\r\n      //sending Registeration Request to the server.\r\n      this.MyDataService.Registeruser(formData).subscribe(\r\n        (response:any) => {\r\n          console.log('Response status:', response[1]);\r\n          this.userData.setUserData(response[0]);\r\n          console.log('Response:', response[0]);\r\n          if(response[0].type==0){\r\n            console.log(\"Student Logged In\")\r\n            this.router.navigate(['']);\r\n             const token = \"8|25HoPY3ItEA611U3saxIzK1RwV4lo9zhyjeB9HF8\";   //stdent\r\n             sessionStorage.setItem('token', token);\r\n             console.log(token)\r\n          }\r\n          else{\r\n            console.log(\"Instructor Logged In\")\r\n            this.router.navigate(['userProfile']);\r\n             const token =\"7|a2cj7O2web2L37do5nlKAS40wy72hPJk6kWxNtrW\";\r\n             sessionStorage.setItem('token', token);\r\n             console.log(token)\r\n          }\r\n          this.userData.setUserData(response[0]);\r\n        },\r\n        (error) => {\r\n           console.error('Error:', error);\r\n\r\n          if (error.status === 422) {\r\n             const errorMessage = error.error.message;\r\n            console.log('Error Message:', errorMessage);\r\n             alert(errorMessage);\r\n          }\r\n        }\r\n      );\r\n\r\n    }\r\n   }\r\n\r\n\r\n  // Helper method to mark all form controls as touched\r\n  markFormGroupTouched(formGroup: FormGroup) {\r\n    Object.values(formGroup.controls).forEach(control => {\r\n      if (control instanceof FormGroup) {\r\n        this.markFormGroupTouched(control);\r\n      } else {\r\n        control.markAsTouched();\r\n      }\r\n    });\r\n  }\r\n\r\n  togglePasswordVisibility() {\r\n    this.passwordVisible = !this.passwordVisible;\r\n  }\r\n  togglePasswordVisibility2() {\r\n    this.passwordVisible2 = !this.passwordVisible2;\r\n  }\r\n  getFullName(): string {\r\n    const firstName = this.registerForm.get('firstName')?.value;\r\n    const lastName = this.registerForm.get('lastName')?.value;\r\n    return `${firstName} ${lastName}`;\r\n  }\r\n}\r\n\r\nfunction passwordMatchValidator(control: AbstractControl): { [key: string]: boolean } | null {\r\n  const password = control.get('password');\r\n  const confirmPassword = control.get('confirmPassword');\r\n\r\n  if (password && confirmPassword && password.value !== confirmPassword.value) {\r\n    return { 'passwordMismatch': true };\r\n  }\r\n\r\n  return null;\r\n}\r\n","\r\n<header>\r\n   <section class=\"register\">\r\n    <section class=\"container\" >\r\n      <section class=\"description\">\r\n            <p class=\"desc_text\">create New Account</p>\r\n            <section class=\"main-img w-50 \">\r\n                <img src=\"../../../assets/images/login.png\" alt=\"image-1\" class=\"main_content_image\">\r\n            </section>\r\n\r\n      </section>\r\n\r\n      <section class=\"main_form\">\r\n\r\n        <form [formGroup]=\"registerForm\" (ngSubmit)=\"submitForm(registerForm.value)\">\r\n          <h3 class=\"main_form_headnig\">sign up</h3>\r\n\r\n          <section class=\"username\">\r\n            <section class=\"input_field\" [ngClass]=\"{ 'has-error': registerForm.controls['firstName'].invalid && registerForm.controls['firstName'].touched }\">\r\n              <i class=\"fa-regular fa-user fa-bounce\"></i>\r\n              <input type=\"text\" formControlName=\"firstName\" placeholder=\"First Name\">\r\n              <span class=\"error-message\" *ngIf=\"registerForm.controls['firstName'].invalid && registerForm.controls['firstName'].touched\">\r\n                First Name is required\r\n              </span>\r\n            </section>\r\n\r\n            <section class=\"input_field\" [ngClass]=\"{ 'has-error': registerForm.controls['lastName'].invalid && registerForm.controls['lastName'].touched }\">\r\n              <i class=\"fa-regular fa-user fa-bounce\"></i>\r\n              <input type=\"text\" formControlName=\"lastName\" placeholder=\"Last Name\">\r\n              <span class=\"error-message\" *ngIf=\"registerForm.controls['lastName'].invalid && registerForm.controls['lastName'].touched\">\r\n                Last Name is required\r\n              </span>\r\n            </section>\r\n          </section>\r\n\r\n          <section class=\"input_field\" [ngClass]=\"{ 'has-error': registerForm.controls['email'].invalid && registerForm.controls['email'].touched }\">\r\n            <i class=\"fa-regular fa-envelope fa-bounce\"></i>\r\n            <input type=\"email\" formControlName=\"email\" placeholder=\"Email\">\r\n            <span class=\"error-message\" *ngIf=\"registerForm.controls['email'].invalid && registerForm.controls['email'].touched\">\r\n              Please enter a valid email address\r\n            </span>\r\n          </section>\r\n\r\n          <section class=\"input_field\" [ngClass]=\"{ 'has-error': registerForm.controls['password'].invalid && registerForm.controls['password'].touched }\">\r\n            <i class=\"fa-solid fa-lock fa-bounce\"></i>\r\n            <input [type]=\"passwordVisible ? 'text' : 'password'\" formControlName=\"password\" placeholder=\"Password\">\r\n            <span class=\"error-message\" *ngIf=\"registerForm.controls['password'].invalid && registerForm.controls['password'].touched\">\r\n              Password must be at least 8 characters long\r\n            </span>\r\n            <i class=\"fa-solid fa-eye password-toggle eye\" (click)=\"togglePasswordVisibility()\"></i>\r\n          </section>\r\n\r\n          <section class=\"input_field\" [ngClass]=\"{ 'has-error': registerForm.controls['confirmPassword'].invalid && registerForm.controls['confirmPassword'].touched }\">\r\n            <i class=\"fa-solid fa-lock fa-bounce\"></i>\r\n            <input type=\"password\" [type]=\"passwordVisible2 ? 'text' : 'password'\" formControlName=\"confirmPassword\" placeholder=\"Confirm Password\">\r\n            <span class=\"error-message\" *ngIf=\"registerForm.hasError('passwordMismatch') && registerForm.controls['confirmPassword'].touched\">\r\n              Passwords do not match\r\n            </span>\r\n            <i class=\"fa-solid fa-eye password-toggle eye\" (click)=\"togglePasswordVisibility2()\"></i>\r\n\r\n          </section>\r\n\r\n          <section class=\"submittion\">\r\n          <section class=\"select_dropdown_menu\" [ngClass]=\"{ 'has-error': registerForm.controls['type'].invalid && registerForm.controls['type'].touched }\">\r\n            <i class=\"fa-regular fa-user fa-bounce user\"></i>\r\n            <select formControlName=\"type\">\r\n              <option value=\"\" disabled selected>AccType</option>\r\n              <option value=\"0\">Student</option>\r\n              <option value=\"1\">Instructor</option>\r\n            </select>\r\n            <i class=\"fa-solid fa-angle-down down_arrow\"></i>\r\n          </section>\r\n          <section class=\"select_dropdown_menu\" [ngClass]=\"{ 'has-error': registerForm.controls['gender'].invalid && registerForm.controls['gender'].touched }\">\r\n            <i class=\"fa-regular fa-user fa-bounce user\"></i>\r\n            <select formControlName=\"gender\">\r\n              <option value=\"\" disabled selected>Gender</option>\r\n              <option value=\"male\">Male</option>\r\n              <option value=\"female\">Female</option>\r\n            </select>\r\n            <i class=\"fa-solid fa-angle-down down_arrow\"></i>\r\n          </section>\r\n          <button class=\"next_btn\" type=\"submit\">Next</button>\r\n        </section>\r\n        <section class=\"d-flex justify-content-between px-1 \" style=\"width: 72%;\">\r\n          <span class=\"error-message\" *ngIf=\"registerForm.controls['type'].invalid && registerForm.controls['type'].touched\">\r\n            Account Type is required\r\n          </span>\r\n          <span class=\"error-message\" *ngIf=\"registerForm.controls['gender'].invalid && registerForm.controls['gender'].touched\">\r\n            Gender is required\r\n          </span>\r\n        </section>\r\n        </form>\r\n       </section>\r\n\r\n    </section>\r\n\r\n  </section>\r\n\r\n</header>\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}