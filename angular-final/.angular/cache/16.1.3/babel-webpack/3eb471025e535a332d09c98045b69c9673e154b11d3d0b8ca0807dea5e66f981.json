{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../../../services/my-data.service\";\nimport * as i2 from \"../../../services/logged-in-user-data.service\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"@angular/forms\";\nexport class LoginComponent {\n  constructor(myAPI, userData, router) {\n    this.myAPI = myAPI;\n    this.userData = userData;\n    this.router = router;\n    this.formData = {};\n  }\n  submitForm(formData) {\n    const email = formData.Email;\n    const password = formData.Password;\n    const loginData = {\n      email: email,\n      password: password\n    };\n    // Send the POST request\n    this.myAPI.Login(loginData).subscribe(response => {\n      console.log('Response:', response.status);\n      // Assuming the server returns a token upon successful login\n      if (response.status == \"successfully logged in \") {\n        this.userData.setUserData(response[0]);\n        console.log('Response:', response[0]);\n        if (response[0].type == 0) {\n          console.log(\"Student Logged In\");\n          this.router.navigate(['']);\n          const token = \"8|25HoPY3ItEA611U3saxIzK1RwV4lo9zhyjeB9HF8\"; //stdent\n          sessionStorage.setItem('token', token);\n          console.log(token);\n        } else {\n          console.log(\"Instructor Logged In\");\n          this.router.navigate(['userProfile']);\n          const token = \"7|a2cj7O2web2L37do5nlKAS40wy72hPJk6kWxNtrW\";\n          sessionStorage.setItem('token', token);\n          console.log(token);\n        }\n        this.userData.setUserData(response[0]);\n      }\n    }, error => {\n      console.error('Error:', error);\n      if (error.status === 422) {\n        const errorMessage = error.error.message;\n        console.log('Error Message:', errorMessage);\n        alert(errorMessage);\n      }\n      location.reload();\n    });\n  }\n  ngOnInit() {}\n}\nLoginComponent.ɵfac = function LoginComponent_Factory(t) {\n  return new (t || LoginComponent)(i0.ɵɵdirectiveInject(i1.MyDataService), i0.ɵɵdirectiveInject(i2.LoggedInUserDataService), i0.ɵɵdirectiveInject(i3.Router));\n};\nLoginComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: LoginComponent,\n  selectors: [[\"login\"]],\n  decls: 33,\n  vars: 2,\n  consts: [[1, \"register\"], [1, \"container\"], [1, \"description\"], [1, \"desc_text\"], [1, \"main-img\", \"w-50\"], [\"src\", \"../../../assets/images/login.png\", \"alt\", \"image-1\", 1, \"main_content_image\"], [1, \"main_form\"], [3, \"submit\"], [1, \"main_form_headnig\"], [1, \"input_field\"], [1, \"fa-regular\", \"fa-envelope\", \"fa-bounce\"], [\"type\", \"email\", \"id\", \"email\", \"placeholder\", \"Email\", \"name\", \"Email\", 1, \"\", 3, \"ngModel\", \"ngModelChange\"], [1, \"fa-solid\", \"fa-lock\", \"fa-bounce\"], [\"type\", \"password\", \"id\", \"password\", \"placeholder\", \"Password\", \"name\", \"Password\", 1, \"\", 3, \"ngModel\", \"ngModelChange\"], [1, \"personal_remember\"], [1, \"remember_me_checking\"], [\"type\", \"checkbox\", \"id\", \"remember\"], [\"for\", \"remember\"], [\"href\", \"\", 1, \"password_forget\"], [\"type\", \"submit\", 1, \"login_btn\"], [1, \"form_anchor1\", \"text-center\"], [1, \"form_anchor2\", \"text-center\"], [\"routerLink\", \"/signup\", 1, \"\"]],\n  template: function LoginComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"header\")(1, \"section\", 0)(2, \"section\", 1)(3, \"section\", 2)(4, \"p\", 3);\n      i0.ɵɵtext(5, \"AI Powerd Courses System \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(6, \"section\", 4);\n      i0.ɵɵelement(7, \"img\", 5);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(8, \"section\", 6)(9, \"form\", 7);\n      i0.ɵɵlistener(\"submit\", function LoginComponent_Template_form_submit_9_listener() {\n        return ctx.submitForm(ctx.formData);\n      });\n      i0.ɵɵelementStart(10, \"h3\", 8);\n      i0.ɵɵtext(11, \"Login\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(12, \"section\", 9);\n      i0.ɵɵelement(13, \"i\", 10);\n      i0.ɵɵelementStart(14, \"input\", 11);\n      i0.ɵɵlistener(\"ngModelChange\", function LoginComponent_Template_input_ngModelChange_14_listener($event) {\n        return ctx.formData.Email = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(15, \"section\", 9);\n      i0.ɵɵelement(16, \"i\", 12);\n      i0.ɵɵelementStart(17, \"input\", 13);\n      i0.ɵɵlistener(\"ngModelChange\", function LoginComponent_Template_input_ngModelChange_17_listener($event) {\n        return ctx.formData.Password = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(18, \"section\", 14)(19, \"section\", 15);\n      i0.ɵɵelement(20, \"input\", 16);\n      i0.ɵɵelementStart(21, \"label\", 17);\n      i0.ɵɵtext(22, \"Remember me\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(23, \"a\", 18);\n      i0.ɵɵtext(24, \"Forgot Password?\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(25, \"button\", 19);\n      i0.ɵɵtext(26, \"login\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(27, \"p\", 20)(28, \"a\");\n      i0.ɵɵtext(29, \"I don\\u2019t have an account ? \");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(30, \"p\", 21)(31, \"a\", 22);\n      i0.ɵɵtext(32, \"create Account\");\n      i0.ɵɵelementEnd()()()()()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(14);\n      i0.ɵɵproperty(\"ngModel\", ctx.formData.Email);\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngModel\", ctx.formData.Password);\n    }\n  },\n  dependencies: [i3.RouterLink, i4.ɵNgNoValidate, i4.DefaultValueAccessor, i4.NgControlStatus, i4.NgControlStatusGroup, i4.NgModel, i4.NgForm],\n  encapsulation: 2\n});","map":{"version":3,"names":["LoginComponent","constructor","myAPI","userData","router","formData","submitForm","email","Email","password","Password","loginData","Login","subscribe","response","console","log","status","setUserData","type","navigate","token","sessionStorage","setItem","error","errorMessage","message","alert","location","reload","ngOnInit","i0","ɵɵdirectiveInject","i1","MyDataService","i2","LoggedInUserDataService","i3","Router","selectors","decls","vars","consts","template","LoginComponent_Template","rf","ctx","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵelement","ɵɵlistener","LoginComponent_Template_form_submit_9_listener","LoginComponent_Template_input_ngModelChange_14_listener","$event","LoginComponent_Template_input_ngModelChange_17_listener","ɵɵadvance","ɵɵproperty"],"sources":["D:\\xampp\\htdocs\\CoursePilot\\Education-system-laravel\\angular-final\\src\\app\\components\\pages\\login\\login.component.ts","D:\\xampp\\htdocs\\CoursePilot\\Education-system-laravel\\angular-final\\src\\app\\components\\pages\\login\\login.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { MyDataService } from '../../../services/my-data.service';\r\nimport { AbstractControl, FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport {LoggedInUserDataService} from '../../../services/logged-in-user-data.service'\r\n\r\n\r\n@Component({\r\n  selector: 'login',\r\n  templateUrl: './login.component.html',\r\n })\r\nexport class LoginComponent implements OnInit {\r\n  formData:any = {};\r\n\r\n  constructor(private myAPI:MyDataService , private userData:LoggedInUserDataService , private router: Router){\r\n\r\n  }\r\n  submitForm(formData: any) {\r\n    const email = formData.Email;\r\n    const password = formData.Password;\r\n    const loginData = {\r\n      email: email,\r\n      password: password\r\n    };\r\n\r\n    // Send the POST request\r\n    this.myAPI.Login(loginData).subscribe(\r\n      (response) => {\r\n\r\n        console.log('Response:', response.status);\r\n\r\n       // Assuming the server returns a token upon successful login\r\n        if(response.status==\"successfully logged in \")\r\n       {\r\n        this.userData.setUserData(response[0]);\r\n          console.log('Response:', response[0]);\r\n          if(response[0].type==0){\r\n            console.log(\"Student Logged In\")\r\n            this.router.navigate(['']);\r\n             const token = \"8|25HoPY3ItEA611U3saxIzK1RwV4lo9zhyjeB9HF8\";   //stdent\r\n             sessionStorage.setItem('token', token);\r\n             console.log(token)\r\n          }\r\n          else{\r\n            console.log(\"Instructor Logged In\")\r\n            this.router.navigate(['userProfile']);\r\n             const token =\"7|a2cj7O2web2L37do5nlKAS40wy72hPJk6kWxNtrW\";\r\n             sessionStorage.setItem('token', token);\r\n             console.log(token)\r\n          }\r\n          this.userData.setUserData(response[0]);\r\n\r\n       }\r\n     },\r\n     (error) => {\r\n      console.error('Error:', error);\r\n\r\n     if (error.status === 422) {\r\n        const errorMessage = error.error.message;\r\n       console.log('Error Message:', errorMessage);\r\n        alert(errorMessage);\r\n     }\r\n     location.reload();\r\n     }\r\n    );\r\n  }\r\n\r\n\r\n  ngOnInit(): void {\r\n\r\n  }\r\n\r\n}\r\n","<header>\r\n\r\n<!-- start main content -->\r\n\r\n  <section class=\"register\">\r\n    <section class=\"container\" >\r\n\r\n      <section class=\"description\">\r\n\r\n            <p class=\"desc_text\">AI Powerd Courses System </p>\r\n            <section class=\"main-img w-50 \">\r\n                <img src=\"../../../assets/images/login.png\" alt=\"image-1\" class=\"main_content_image\">\r\n            </section>\r\n\r\n      </section>\r\n\r\n      <section class=\"main_form\">\r\n\r\n        <form (submit)=\"submitForm(formData)\">\r\n\r\n            <h3 class=\"main_form_headnig\">Login</h3>\r\n\r\n              <section class=\"input_field\">\r\n                <i class=\"fa-regular fa-envelope fa-bounce\"></i>\r\n                <input type=\"email\" class=\"\" id=\"email\" placeholder=\"Email\" name=\"Email\" [(ngModel)]=\"formData.Email\">\r\n              </section>\r\n\r\n              <section class=\"input_field\">\r\n                <i class=\"fa-solid fa-lock fa-bounce\"></i>\r\n                <input type=\"password\" class=\"\" id=\"password\" placeholder=\"Password\" name=\"Password\" [(ngModel)]=\"formData.Password\">\r\n              </section>\r\n\r\n            <section class=\"personal_remember\">\r\n\r\n                <section class=\"remember_me_checking\">\r\n                  <input type=\"checkbox\" id=\"remember\">\r\n                  <label for=\"remember\">Remember me</label>\r\n\r\n                </section>\r\n\r\n               <a href=\"\" class=\"password_forget\">Forgot Password?</a>\r\n\r\n            </section>\r\n\r\n            <button class=\"login_btn\" type=\"submit\">login</button>\r\n\r\n\r\n            <p class=\"form_anchor1 text-center\"><a>I don’t have an account ? </a></p>\r\n\r\n            <p class=\"form_anchor2 text-center\"><a class=\"\"  routerLink=\"/signup\" >create Account</a></p>\r\n\r\n        </form>\r\n\r\n       </section>\r\n\r\n    </section>\r\n\r\n  </section>\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}